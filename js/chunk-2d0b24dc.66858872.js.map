{"version":3,"sources":["webpack:///./src/views/package/1-axios/index.vue","webpack:///./src/views/package/1-axios/index.vue?29cb"],"names":["appContext","getCurrentInstance","word","ref","translateRes","reactive","handleHttp","value","config","globalProperties","$axios","get","params","then","response","data","translation","replace","Object","assign","catch","error","ElNotification","title","message","type","duration","onMounted","links","label","link","__exports__"],"mappings":"mkJA2JA,MAAM,WAAEA,GAAeC,kCAGjBC,EAAOC,iBAAI,QACXC,EAAeC,sBAAS,IAExBC,EAAa,KACZJ,EAAKK,MASVP,EAAWQ,OAAOC,iBAAiBC,OAChCC,IAAI,iBAAkB,CACrBC,OAAQ,CACNV,KAAMA,EAAKK,SAGdM,MAAK,SAAUC,GACdA,EAASC,KAAKC,YAAcF,EAASC,KAAKC,YAAYC,QAAQ,OAAQ,SACtEC,OAAOC,OAAOf,EAAcU,EAASC,SAEtCK,OAAM,SAAUC,GACfC,eAAe,CACbC,MAAO,KACPC,QAAS,SACTC,KAAM,QACNC,SAAU,YAvBdJ,eAAe,CACbC,MAAO,KACPC,QAAS,UACTC,KAAM,QACNC,SAAU,UAwBhBC,uBAAU,KACRrB,MAGF,MAAMsB,EAAQ,CACZ,CACEC,MAAO,cACPC,KAAM,wCAER,CACED,MAAO,2CACPC,KAAM,wEAER,CACED,MAAO,+BACPC,KAAM,gCAER,CACED,MAAO,eACPC,KAAM,+CAER,CACED,MAAO,gBACPC,KAAM,kDAER,CACED,MAAO,iCACPC,KAAM,uEAER,CACED,MAAO,uBACPC,KAAM,8DAER,CACED,MAAO,yBACPC,KAAM,8CAER,CACED,MAAO,8BACPC,KAAM,gE,8yCCnOV,MAAMC,EAAc,EAEL","file":"js/chunk-2d0b24dc.66858872.js","sourcesContent":["<template>\r\n  <div class=\"flex justify-between\">\r\n    <div>\r\n      <div class=\"flex items-center\">\r\n        <el-input\r\n          v-model=\"word\"\r\n          class=\"w-56\"\r\n          placeholder=\"请输入要翻译的英文\"\r\n          clearable\r\n          @keyup.enter=\"handleHttp\"\r\n        ></el-input>\r\n        <el-button type=\"primary\" @click=\"handleHttp\" class=\"ml-4\">翻译</el-button>\r\n      </div>\r\n      <div class=\"mt-2\" v-html=\"translateRes.translation\" v-if=\"translateRes\"></div>\r\n    </div>\r\n    <div class=\"w-96 italic text-sm font-semibold leading-6 mr-8\">\r\n      <p>\r\n        <span class=\"text-xl\">注：</span>\r\n        本用例不具体封装 Axios，仅作使用展示，具体封装可以参考\r\n        <a class=\"text-blue-600\" href=\"https://axios-http.com/zh/docs/intro\" target=\"__blank\">axios 文档</a>\r\n        ，创建一个 request.js 文件进行封装，最后挂载在全局 property 下即可。\r\n      </p>\r\n      <p>\r\n        * 封装 Axios 时，你或许会需要\r\n        <a class=\"text-blue-600\" href=\"https://www.npmjs.com/package/qs\" target=\"__blank\">qs</a>\r\n        去序列化你的参数。\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex overflow-x-auto\">\r\n    <div v-highlight class=\"mt-8\">\r\n      <p class=\"font-bold\">组件代码：</p>\r\n      <pre>\r\n            <code>\r\n&lt;template&gt;\r\n  &lt;div&gt;\r\n    &lt;el-input v-model=\"word\" placeholder=\"请输入要翻译的英文\" clearable @keyup.enter=\"handleHttp\"&gt;&lt;/el-input&gt;\r\n    &lt;el-button type=\"primary\" @click=\"handleHttp\"&gt;翻译&lt;/el-button&gt;\r\n  &lt;/div&gt;\r\n  &lt;div v-html=\"translateRes.translation\" v-if=\"translateRes\"&gt;&lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\n  import { getCurrentInstance, ref, reactive, onMounted } from \"vue\";\r\n  import { ElNotification } from \"element-plus\";\r\n\r\n  const { appContext } = getCurrentInstance();  // 请在控制台打印并观察 appContext.config.globalProperties\r\n\r\n  const word = ref(\"demo\");   // ref 需要通过 .value 取/赋值\r\n  const translateRes = reactive({});  // reactive 对象可以通过 .属性名 直接取/赋值\r\n\r\n  const handleHttp = () => {\r\n    if (!word.value) {\r\n      ElNotification({\r\n        title: \"提示\",\r\n        message: \"单词不能为空！\",\r\n        type: \"error\",\r\n        duration: \"1300\",\r\n      });\r\n      return;\r\n    }\r\n    appContext.config.globalProperties.$axios\r\n      .get(\"/api/dict/word\", {\r\n        params: {\r\n          word: word.value,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        response.data.translation = response.data.translation.replace(/\\\\n/g, \"&lt;br/&gt;\");\r\n        Object.assign(translateRes, response.data);\r\n      })\r\n      .catch(function (error) {\r\n        ElNotification({\r\n          title: \"提示\",\r\n          message: \"未找到结果！\",\r\n          type: \"error\",\r\n          duration: \"1300\",\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  // async await 使用示例\r\n  // const handleHttpAsync = async () => {\r\n  //   await appContext.config.globalProperties.$axios\r\n  //     .get(\"/api/dict/word\", {\r\n  //       params: {\r\n  //         word: word.value,\r\n  //       },\r\n  //     })\r\n  //     .then(function (response) {\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //    });\r\n  // };\r\n\r\n  onMounted(() => {\r\n    handleHttp();\r\n  });\r\n&lt;/script&gt;\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\">\r\n      <p class=\"font-bold\">main.js代码：</p>\r\n      <pre>\r\n            <code class=\"js\">\r\n// 这里仅展示 axios 相关，非全部代码\r\nimport { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nconst app = createApp(App);\r\n\r\nimport axios from \"axios\";\r\napp.config.globalProperties.$axios = axios;\r\n\r\napp.mount(\"#app\");\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\">\r\n      <p class=\"font-bold\">vue.config.js代码：</p>\r\n      <pre>\r\n            <code class=\"js\">\r\nmodule.exports = {\r\n  devServer: {\r\n    open: true,\r\n    host: \"localhost\",\r\n    port: 8080, // 改成你本地的端口号\r\n    https: false,\r\n    proxy: {\r\n      \"/api\": {\r\n        target: \"https://helperservice.getquicker.cn\", // 跨域请求的地址\r\n        changeOrigin: true, // 只有这个值为true的情况下 才表示开启跨域\r\n        secure: true, // 如果是https接口，需要配置这个参数\r\n        // 路径重写\r\n        pathRewrite: {\r\n          \"^/api\": \"\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n            </code>\r\n        </pre>\r\n    </div>\r\n  </div>\r\n\r\n  <ReLink class=\"mt-8\" :links=\"links\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { getCurrentInstance, ref, reactive, onMounted } from \"vue\";\r\nconst { appContext } = getCurrentInstance();\r\nimport { ElNotification } from \"element-plus\";\r\n\r\nconst word = ref(\"demo\");\r\nconst translateRes = reactive({});\r\n\r\nconst handleHttp = () => {\r\n  if (!word.value) {\r\n    ElNotification({\r\n      title: \"提示\",\r\n      message: \"单词不能为空！\",\r\n      type: \"error\",\r\n      duration: \"1300\",\r\n    });\r\n    return;\r\n  }\r\n  appContext.config.globalProperties.$axios\r\n    .get(\"/api/dict/word\", {\r\n      params: {\r\n        word: word.value,\r\n      },\r\n    })\r\n    .then(function (response) {\r\n      response.data.translation = response.data.translation.replace(/\\\\n/g, \"<br/>\");\r\n      Object.assign(translateRes, response.data);\r\n    })\r\n    .catch(function (error) {\r\n      ElNotification({\r\n        title: \"提示\",\r\n        message: \"未找到结果！\",\r\n        type: \"error\",\r\n        duration: \"1300\",\r\n      });\r\n    });\r\n};\r\n\r\nonMounted(() => {\r\n  handleHttp();\r\n});\r\n\r\nconst links = [\r\n  {\r\n    label: \"axios 中文文档：\",\r\n    link: \"https://axios-http.com/zh/docs/intro\",\r\n  },\r\n  {\r\n    label: \"vue3 中如何添加一个可以在应用的任何组件实例中访问的全局 property？\",\r\n    link: \"https://v3.cn.vuejs.org/api/application-config.html#globalproperties\",\r\n  },\r\n  {\r\n    label: \"vue3 setup 模式中如何全局挂载使用Axios？\",\r\n    link: \"https://tiven.cn/p/7f7ba3b2/\",\r\n  },\r\n  {\r\n    label: \"vue 解决跨域的办法？\",\r\n    link: \"https://segmentfault.com/a/1190000040583348\",\r\n  },\r\n  {\r\n    label: \"vue 如何绑定回车事件？\",\r\n    link: \"https://v3.cn.vuejs.org/guide/events.html#按键别名\",\r\n  },\r\n  {\r\n    label: \"vue3 中 getCurrentInstance 是什么？\",\r\n    link: \"https://v3.cn.vuejs.org/api/composition-api.html#getcurrentinstance\",\r\n  },\r\n  {\r\n    label: \"vue3 中 reactive 是什么？\",\r\n    link: \"https://v3.cn.vuejs.org/api/basic-reactivity.html#reactive\",\r\n  },\r\n  {\r\n    label: \"了解 ref 和 reactive 的区别：\",\r\n    link: \"https://juejin.cn/post/7013326406444646407\",\r\n  },\r\n  {\r\n    label: \"vue3 中 ref 和 reactive 有何区别？\",\r\n    link: \"https://www.weirshi.com/framework/Vue/3.x/ref,reactive.html\",\r\n  },\r\n];\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}