{"version":3,"sources":["webpack:///./src/views/base/1-setup/index.vue","webpack:///./src/views/base/1-setup/index.vue?8973"],"names":["inputValue","ref","links","label","link","__exports__"],"mappings":"q6DAiEA,MAAMA,EAAaC,iBAAI,aAEjBC,EAAQ,CACZ,CACEC,MAAO,6BACPC,KAAM,yDAER,CACED,MAAO,+BACPC,KAAM,iDAER,CACED,MAAO,0CACPC,KAAM,iEAER,CACED,MAAO,4BACPC,KAAM,yEAER,CACED,MAAO,oCACPC,KAAM,2C,i3BCnFV,MAAMC,EAAc,EAEL","file":"js/chunk-2d0ba6ec.7d595f9d.js","sourcesContent":["<template>\r\n  <!-- 1-基础的数据响应 -->\r\n  <div class=\"flex justify-between\">\r\n    <div>\r\n      <div class=\"flex\">\r\n        <span style=\"flex: 0 0 80px;\" @click=\"dd\">我的国籍：</span>\r\n        <el-input v-model=\"inputValue\" placeholder=\"请输入\" maxlength=\"20\" />\r\n      </div>\r\n      <div class=\"mt-4\">响应的值：{{ inputValue }}</div>\r\n    </div>\r\n\r\n    <div class=\"italic text-sm font-semibold leading-6 mr-8\" style=\"width: 500px\">\r\n      <p>\r\n        <span class=\"text-xl\">注：</span>\r\n        vue3 中，对象、数组的更新不再需要 $set（且已被\r\n        <a class=\"text-blue-600\" href=\"https://v3.cn.vuejs.org/guide/migration/introduction.html#被移除的-api\">移除</a>\r\n        ），只需要用 ref、reactive 声明对象、数组即可实现实时响应，如 const obj = reactive({ a: 1 })，你可以直接使用\r\n        obj.b = 2，即可更新数据，并实时响应。这与 vue3 的 proxy 实现原理有关。\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div v-highlight class=\"mt-8\" style=\"width: 600px\">\r\n    <p class=\"font-bold\">组件代码：</p>\r\n    <pre>\r\n        <code>\r\n&lt;template&gt;\r\n  &lt;el-input v-model=\"inputValue\" placeholder=\"请输入\"/&gt;\r\n  <span v-pre>{{ inputValue }}</span>\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\n  import { ref, reactive } from \"vue\";\r\n  const inputValue = ref(\"中国\"); // 初始值，空值设置：ref('')\r\n\r\n  // 以下为常见的响应数据示例（对象、数组、基本类型）\r\n  const user = reactive({\r\n      name: \"\",\r\n      address: \"\",\r\n  });\r\n  const tableData = ref([]);\r\n  const title = ref(\"\");\r\n  const one = ref(1);\r\n  const isValid = ref(true);\r\n  const foo = ref(null);\r\n  const ufo = ref(undefined);\r\n\r\n  // 用ref、reactive声明的对象、数组，可以直接更新，\r\n  // 并且数据是响应的，可以在视图实时更新\r\n  user.age = 13;\r\n  tableData.value[0] = {\r\n    name: \"apple\",\r\n    price: \"12.0\"\r\n  }\r\n&lt;/script&gt;\r\n        </code>\r\n    </pre>\r\n  </div>\r\n\r\n  <ReLink :links=\"links\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst inputValue = ref(\"中国（编辑我试试）\");\r\n\r\nconst links = [\r\n  {\r\n    label: \"vue3 setup 模式中如何创建数据的响应式状态\",\r\n    link: \"https://v3.cn.vuejs.org/api/sfc-script-setup.html#响应式\",\r\n  },\r\n  {\r\n    label: \"vue3 setup 模式中的ref是什么？有什么作用？\",\r\n    link: \"https://v3.cn.vuejs.org/api/refs-api.html#ref\",\r\n  },\r\n  {\r\n    label: \"Vue 3 Composition API: Ref vs Reactive?\",\r\n    link: \"https://www.danvega.dev/blog/2020/02/12/vue3-ref-vs-reactive/\",\r\n  },\r\n  {\r\n    label: \"ref vs reactive in Vue 3?\",\r\n    link: \"https://stackoverflow.com/questions/61452458/ref-vs-reactive-in-vue-3\",\r\n  },\r\n  {\r\n    label: \"《vue3》reactivity API（vue3的$set呢?）\",\r\n    link: \"https://www.jianshu.com/p/d3300061ce89\",\r\n  },\r\n];\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}