(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a2df6"],{"0088":function(e,t,l){"use strict";l.r(t);var c=l("7a23");const n=Object(c["createElementVNode"])("p",{class:"font-semibold"},"我是子组件",-1),r=Object(c["createElementVNode"])("p",{class:"mt-2"},"向外暴露的值：childExpose",-1),s=Object(c["createElementVNode"])("p",{class:"mt-2"},"不向外暴露值：childUnexpose",-1),a=Object(c["createElementVNode"])("p",{class:"mt-2"},"内部方法：handleChildClick",-1),o=[n,r,s,a];var i={__name:"Child",setup(e,{expose:t}){const l=Object(c["ref"])("我是暴露的值！"),n=(Object(c["ref"])("我是没有被暴露的值！"),()=>{alert("我是子组件内部的方法！")});return t({childExpose:l,handleChildClick:n}),(e,t)=>(Object(c["openBlock"])(),Object(c["createElementBlock"])("div",{onClick:n,class:"text-sm"},o))}};const d=i;var p=d;const h={class:"flex justify-between"},m={class:"flex"},b={class:"w-80 h-80 rounded-2xl relative text-center shadow"},u=Object(c["createElementVNode"])("p",{class:"font-semibold"},"我是父组件",-1),f=Object(c["createTextVNode"])("点我获取子组件值、触发方法"),j=Object(c["createStaticVNode"])('<div class="w-96 italic text-sm font-semibold leading-6 mr-8"><p><span class="text-xl">注：</span><a class="text-blue-600" href="https://v3.cn.vuejs.org/guide/migration/children.html#children" target="__blank"> $children </a> 实例 property 已从 Vue 3.0 中移除，不再支持。如果你需要访问子组件实例，我们建议使用 <a class="text-blue-600" href="https://v3.cn.vuejs.org/guide/composition-api-template-refs.html#模板引用" target="__blank"> $refs </a> 。 <a class="text-blue-600" href="https://v3.cn.vuejs.org/api/instance-properties.html#parent" target="__blank"> $parent </a> 仍支持。 </p></div>',1),v={class:"flex mt-8 overflow-x-auto"},x=Object(c["createElementVNode"])("p",{class:"font-bold"},"父组件代码：",-1),O=Object(c["createElementVNode"])("pre",null,[Object(c["createTextVNode"])("        "),Object(c["createElementVNode"])("code",null,'\r\n<template>\r\n  我是父组件\r\n  <div @click="handleFn">点我获取子组件值、触发方法</div>\r\n  <Child ref="childRef"/>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref } from "vue";\r\n  import Child from "./Child";\r\n\r\n  const childRef = ref(); // 这里的变量名必须和组件 ref 的名称一致\r\n  const handleFn = () => {\r\n    alert(`子组件暴露的值-\'childExpose\'：${childRef.value.childExpose}`);\r\n    alert(`子组件未暴露的值-\'childUnexpose\'：${childRef.value.childUnexpose}`);\r\n    childRef.value.handleChildClick();\r\n  };\r\n<\/script>\r\n        '),Object(c["createTextVNode"])("\r\n    ")],-1),E=[x,O],k={class:"ml-4"},V=Object(c["createElementVNode"])("p",{class:"font-bold"},"子组件代码：",-1),N=Object(c["createElementVNode"])("pre",null,[Object(c["createTextVNode"])("        "),Object(c["createElementVNode"])("code",null,'\r\n<template>\r\n  <div @click="handleChildClick">\r\n    <p>我是子组件</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from "vue";\r\nconst childExpose = ref("我是暴露的值！");\r\nconst childUnexpose = ref("我是没有被暴露的值！");\r\nconst handleChildClick = () => {\r\n  alert("我是子组件内部的方法！");\r\n};\r\n\r\n// 通过 defineExpose 暴露出去的值、方法等，才能被取到\r\ndefineExpose({\r\n  childExpose,\r\n  handleChildClick,\r\n});\r\n<\/script>\r\n        '),Object(c["createTextVNode"])("\r\n    ")],-1),C=[V,N];var w={__name:"index",setup(e){const t=Object(c["ref"])(),l=()=>{alert("子组件暴露的值-'childExpose'："+t.value.childExpose),alert("子组件未暴露的值-'childUnexpose'："+t.value.childUnexpose),t.value.handleChildClick()},n=[{label:"vue3 setup 模式中为什么不能直接通过ref调用组件的方法、值？",answer:"使用 <script setup> 的组件是默认关闭的，也即通过模板 ref 或者 $parent 链获取到的组件的公开实例，不会暴露任何在 <script setup> 中声明的绑定。为了在 <script setup> 组件中明确要暴露出去的属性，使用 defineExpose 编译器宏。"},{label:"vue3 setup 模式中defineExpose是什么？",link:"https://v3.cn.vuejs.org/api/sfc-script-setup.html#defineexpose"},{label:"vue3 setup 模式中如何使用 ref 获取 dom？",link:"https://v3.cn.vuejs.org/guide/composition-api-template-refs.html#模板引用"}];return(e,r)=>{const s=Object(c["resolveComponent"])("el-button"),a=Object(c["resolveComponent"])("ReLink"),o=Object(c["resolveDirective"])("highlight");return Object(c["openBlock"])(),Object(c["createElementBlock"])(c["Fragment"],null,[Object(c["createElementVNode"])("div",h,[Object(c["createElementVNode"])("div",m,[Object(c["createElementVNode"])("div",b,[u,Object(c["createVNode"])(s,{type:"primary",class:"mt-2",onClick:l},{default:Object(c["withCtx"])(()=>[f]),_:1}),Object(c["createVNode"])(Object(c["unref"])(p),{ref_key:"childRef",ref:t,class:"w-60 h-40 mt-8 text-center shadow-md flex flex-col items-center justify-center absolute transform -translate-x-2/4 -translate-y-1/2 top-2/4 left-2/4"},null,512)])]),j]),Object(c["createElementVNode"])("div",v,[Object(c["withDirectives"])((Object(c["openBlock"])(),Object(c["createElementBlock"])("div",null,E)),[[o]]),Object(c["withDirectives"])((Object(c["openBlock"])(),Object(c["createElementBlock"])("div",k,C)),[[o]])]),Object(c["createVNode"])(a,{links:n})],64)}}};const g=w;t["default"]=g}}]);
//# sourceMappingURL=chunk-2d0a2df6.967ee4ac.js.map