(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b24dc"],{2415:function(e,t,r){"use strict";r.r(t);var n=r("7a23"),a=r("2295");const c={class:"flex justify-between"},o={class:"flex items-center"},l=Object(n["createTextVNode"])("翻译"),s=["innerHTML"],i=Object(n["createElementVNode"])("div",{class:"w-96 italic text-sm font-semibold leading-6 mr-8"},[Object(n["createElementVNode"])("p",null,[Object(n["createElementVNode"])("span",{class:"text-xl"},"注："),Object(n["createTextVNode"])(" 本用例不具体封装 Axios，仅作使用展示，具体封装可以参考 "),Object(n["createElementVNode"])("a",{class:"text-blue-600",href:"https://axios-http.com/zh/docs/intro",target:"__blank"},"axios 文档"),Object(n["createTextVNode"])(" ，创建一个 request.js 文件进行封装，最后挂载在全局 property 下即可。 ")]),Object(n["createElementVNode"])("p",null,[Object(n["createTextVNode"])(" * 封装 Axios 时，你或许会需要 "),Object(n["createElementVNode"])("a",{class:"text-blue-600",href:"https://www.npmjs.com/package/qs",target:"__blank"},"qs"),Object(n["createTextVNode"])(" 去序列化你的参数。 ")])],-1),p={class:"flex overflow-x-auto"},d={class:"mt-8"},b=Object(n["createElementVNode"])("p",{class:"font-bold"},"组件代码：",-1),u=Object(n["createElementVNode"])("pre",null,[Object(n["createTextVNode"])("            "),Object(n["createElementVNode"])("code",null,'\r\n<template>\r\n  <div>\r\n    <el-input v-model="word" placeholder="请输入要翻译的英文" clearable @keyup.enter="handleHttp"></el-input>\r\n    <el-button type="primary" @click="handleHttp">翻译</el-button>\r\n  </div>\r\n  <div v-html="translateRes.translation" v-if="translateRes"></div>\r\n</template>\r\n\r\n<script setup>\r\n  import { getCurrentInstance, ref, reactive, onMounted } from "vue";\r\n  import { ElNotification } from "element-plus";\r\n\r\n  const { appContext } = getCurrentInstance();  // 请在控制台打印并观察 appContext.config.globalProperties\r\n\r\n  const word = ref("demo");   // ref 需要通过 .value 取/赋值\r\n  const translateRes = reactive({});  // reactive 对象可以通过 .属性名 直接取/赋值\r\n\r\n  const handleHttp = () => {\r\n    if (!word.value) {\r\n      ElNotification({\r\n        title: "提示",\r\n        message: "单词不能为空！",\r\n        type: "error",\r\n        duration: "1300",\r\n      });\r\n      return;\r\n    }\r\n    appContext.config.globalProperties.$axios\r\n      .get("/api/dict/word", {\r\n        params: {\r\n          word: word.value,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        response.data.translation = response.data.translation.replace(/\\\\n/g, "<br/>");\r\n        Object.assign(translateRes, response.data);\r\n      })\r\n      .catch(function (error) {\r\n        ElNotification({\r\n          title: "提示",\r\n          message: "未找到结果！",\r\n          type: "error",\r\n          duration: "1300",\r\n        });\r\n      });\r\n  };\r\n\r\n\r\n  // async await 使用示例\r\n  // const handleHttpAsync = async () => {\r\n  //   await appContext.config.globalProperties.$axios\r\n  //     .get("/api/dict/word", {\r\n  //       params: {\r\n  //         word: word.value,\r\n  //       },\r\n  //     })\r\n  //     .then(function (response) {\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //    });\r\n  // };\r\n\r\n  onMounted(() => {\r\n    handleHttp();\r\n  });\r\n<\/script>\r\n            '),Object(n["createTextVNode"])("\r\n        ")],-1),m=[b,u],j={class:"mt-8 ml-4"},v=Object(n["createElementVNode"])("p",{class:"font-bold"},"main.js代码：",-1),O=Object(n["createElementVNode"])("pre",null,[Object(n["createTextVNode"])("            "),Object(n["createElementVNode"])("code",{class:"js"},'\r\n// 这里仅展示 axios 相关，非全部代码\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\nconst app = createApp(App);\r\n\r\nimport axios from "axios";\r\napp.config.globalProperties.$axios = axios;\r\n\r\napp.mount("#app");\r\n            '),Object(n["createTextVNode"])("\r\n        ")],-1),h=[v,O],f={class:"mt-8 ml-4"},g=Object(n["createElementVNode"])("p",{class:"font-bold"},"vue.config.js代码：",-1),x=Object(n["createElementVNode"])("pre",null,[Object(n["createTextVNode"])("            "),Object(n["createElementVNode"])("code",{class:"js"},'\r\nmodule.exports = {\r\n  devServer: {\r\n    open: true,\r\n    host: "localhost",\r\n    port: 8080, // 改成你本地的端口号\r\n    https: false,\r\n    proxy: {\r\n      "/api": {\r\n        target: "https://helperservice.getquicker.cn", // 跨域请求的地址\r\n        changeOrigin: true, // 只有这个值为true的情况下 才表示开启跨域\r\n        secure: true, // 如果是https接口，需要配置这个参数\r\n        // 路径重写\r\n        pathRewrite: {\r\n          "^/api": "",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n            '),Object(n["createTextVNode"])("\r\n        ")],-1),V=[g,x];var w={__name:"index",setup(e){const{appContext:t}=Object(n["getCurrentInstance"])(),r=Object(n["ref"])("demo"),b=Object(n["reactive"])({}),u=()=>{r.value?t.config.globalProperties.$axios.get("/api/dict/word",{params:{word:r.value}}).then((function(e){e.data.translation=e.data.translation.replace(/\\n/g,"<br/>"),Object.assign(b,e.data)})).catch((function(e){Object(a["a"])({title:"提示",message:"未找到结果！",type:"error",duration:"1300"})})):Object(a["a"])({title:"提示",message:"单词不能为空！",type:"error",duration:"1300"})};Object(n["onMounted"])(()=>{u()});const v=[{label:"axios 中文文档：",link:"https://axios-http.com/zh/docs/intro"},{label:"vue3 中如何添加一个可以在应用的任何组件实例中访问的全局 property？",link:"https://v3.cn.vuejs.org/api/application-config.html#globalproperties"},{label:"vue3 setup 模式中如何全局挂载使用Axios？",link:"https://tiven.cn/p/7f7ba3b2/"},{label:"vue 解决跨域的办法？",link:"https://segmentfault.com/a/1190000040583348"},{label:"vue 如何绑定回车事件？",link:"https://v3.cn.vuejs.org/guide/events.html#按键别名"},{label:"vue3 中 getCurrentInstance 是什么？",link:"https://v3.cn.vuejs.org/api/composition-api.html#getcurrentinstance"},{label:"vue3 中 reactive 是什么？",link:"https://v3.cn.vuejs.org/api/basic-reactivity.html#reactive"},{label:"了解 ref 和 reactive 的区别：",link:"https://juejin.cn/post/7013326406444646407"},{label:"vue3 中 ref 和 reactive 有何区别？",link:"https://www.weirshi.com/framework/Vue/3.x/ref,reactive.html"}];return(e,t)=>{const a=Object(n["resolveComponent"])("el-input"),O=Object(n["resolveComponent"])("el-button"),g=Object(n["resolveComponent"])("ReLink"),x=Object(n["resolveDirective"])("highlight");return Object(n["openBlock"])(),Object(n["createElementBlock"])(n["Fragment"],null,[Object(n["createElementVNode"])("div",c,[Object(n["createElementVNode"])("div",null,[Object(n["createElementVNode"])("div",o,[Object(n["createVNode"])(a,{modelValue:r.value,"onUpdate:modelValue":t[0]||(t[0]=e=>r.value=e),class:"w-56",placeholder:"请输入要翻译的英文",clearable:"",onKeyup:Object(n["withKeys"])(u,["enter"])},null,8,["modelValue","onKeyup"]),Object(n["createVNode"])(O,{type:"primary",onClick:u,class:"ml-4"},{default:Object(n["withCtx"])(()=>[l]),_:1})]),b?(Object(n["openBlock"])(),Object(n["createElementBlock"])("div",{key:0,class:"mt-2",innerHTML:b.translation},null,8,s)):Object(n["createCommentVNode"])("",!0)]),i]),Object(n["createElementVNode"])("div",p,[Object(n["withDirectives"])((Object(n["openBlock"])(),Object(n["createElementBlock"])("div",d,m)),[[x]]),Object(n["withDirectives"])((Object(n["openBlock"])(),Object(n["createElementBlock"])("div",j,h)),[[x]]),Object(n["withDirectives"])((Object(n["openBlock"])(),Object(n["createElementBlock"])("div",f,V)),[[x]])]),Object(n["createVNode"])(g,{class:"mt-8",links:v})],64)}}};const N=w;t["default"]=N}}]);
//# sourceMappingURL=chunk-2d0b24dc.66858872.js.map