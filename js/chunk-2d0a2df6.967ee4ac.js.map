{"version":3,"sources":["webpack:///./src/views/base/5-useChildFn/Child.vue","webpack:///./src/views/base/5-useChildFn/Child.vue?4c88","webpack:///./src/views/base/5-useChildFn/index.vue","webpack:///./src/views/base/5-useChildFn/index.vue?b669"],"names":["childExpose","ref","handleChildClick","alert","expose","__exports__","childRef","handleFn","value","childUnexpose","links","label","answer","link"],"mappings":"8fAWA,MAAMA,EAAcC,iBAAI,WAElBC,GADgBD,iBAAI,cACD,KACvBE,MAAM,iB,OAIRC,EAAa,CACXJ,cACAE,qB,yGCjBF,MAAMG,EAAc,EAEL,Q,i1EC4Ff,MAAMC,EAAWL,mBACXM,EAAW,KACfJ,MAAO,yBAAwBG,EAASE,MAAMR,aAC9CG,MAAO,4BAA2BG,EAASE,MAAMC,eACjDH,EAASE,MAAMN,oBAGXQ,EAAQ,CACZ,CACEC,MAAO,uCACPC,OACE,uJAEJ,CACED,MAAO,iCACPE,KAAM,kEAER,CACEF,MAAO,iCACPE,KAAM,0E,ggCCjHV,MAAM,EAAc,EAEL","file":"js/chunk-2d0a2df6.967ee4ac.js","sourcesContent":["<template>\r\n  <div @click=\"handleChildClick\" class=\"text-sm\">\r\n    <p class=\"font-semibold\">我是子组件</p>\r\n    <p class=\"mt-2\">向外暴露的值：childExpose</p>\r\n    <p class=\"mt-2\">不向外暴露值：childUnexpose</p>\r\n    <p class=\"mt-2\">内部方法：handleChildClick</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nconst childExpose = ref(\"我是暴露的值！\");\r\nconst childUnexpose = ref(\"我是没有被暴露的值！\");\r\nconst handleChildClick = () => {\r\n  alert(\"我是子组件内部的方法！\");\r\n};\r\n\r\n// 通过 defineExpose 暴露出去的值、方法等，才能被取到\r\ndefineExpose({\r\n  childExpose,\r\n  handleChildClick,\r\n});\r\n</script>\r\n","import script from \"./Child.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Child.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"flex justify-between\">\r\n    <div class=\"flex\">\r\n      <div class=\"w-80 h-80 rounded-2xl relative text-center shadow\">\r\n        <p class=\"font-semibold\">我是父组件</p>\r\n        <el-button type=\"primary\" class=\"mt-2\" @click=\"handleFn\">点我获取子组件值、触发方法</el-button>\r\n        <Child\r\n          ref=\"childRef\"\r\n          class=\"w-60 h-40 mt-8 text-center shadow-md flex flex-col items-center justify-center absolute transform -translate-x-2/4 -translate-y-1/2 top-2/4 left-2/4\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"w-96 italic text-sm font-semibold leading-6 mr-8\">\r\n      <p>\r\n        <span class=\"text-xl\">注：</span>\r\n        <a class=\"text-blue-600\" href=\"https://v3.cn.vuejs.org/guide/migration/children.html#children\" target=\"__blank\">\r\n          $children\r\n        </a>\r\n        实例 property 已从 Vue 3.0 中移除，不再支持。如果你需要访问子组件实例，我们建议使用\r\n        <a\r\n          class=\"text-blue-600\"\r\n          href=\"https://v3.cn.vuejs.org/guide/composition-api-template-refs.html#模板引用\"\r\n          target=\"__blank\"\r\n        >\r\n          $refs\r\n        </a>\r\n        。\r\n        <a class=\"text-blue-600\" href=\"https://v3.cn.vuejs.org/api/instance-properties.html#parent\" target=\"__blank\">\r\n          $parent\r\n        </a>\r\n        仍支持。\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex mt-8 overflow-x-auto\">\r\n    <div v-highlight>\r\n      <p class=\"font-bold\">父组件代码：</p>\r\n      <pre>\r\n        <code>\r\n&lt;template&gt;\r\n  我是父组件\r\n  &lt;div @click=\"handleFn\"&gt;点我获取子组件值、触发方法&lt;/div&gt;\r\n  &lt;Child ref=\"childRef\"/&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\n  import { ref } from \"vue\";\r\n  import Child from \"./Child\";\r\n\r\n  const childRef = ref(); // 这里的变量名必须和组件 ref 的名称一致\r\n  const handleFn = () => {\r\n    alert(`子组件暴露的值-'childExpose'：${childRef.value.childExpose}`);\r\n    alert(`子组件未暴露的值-'childUnexpose'：${childRef.value.childUnexpose}`);\r\n    childRef.value.handleChildClick();\r\n  };\r\n&lt;/script&gt;\r\n        </code>\r\n    </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"ml-4\">\r\n      <p class=\"font-bold\">子组件代码：</p>\r\n      <pre>\r\n        <code>\r\n&lt;template&gt;\r\n  &lt;div @click=\"handleChildClick\"&gt;\r\n    &lt;p&gt;我是子组件&lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\nimport { ref } from \"vue\";\r\nconst childExpose = ref(\"我是暴露的值！\");\r\nconst childUnexpose = ref(\"我是没有被暴露的值！\");\r\nconst handleChildClick = () => {\r\n  alert(\"我是子组件内部的方法！\");\r\n};\r\n\r\n// 通过 defineExpose 暴露出去的值、方法等，才能被取到\r\ndefineExpose({\r\n  childExpose,\r\n  handleChildClick,\r\n});\r\n&lt;/script&gt;\r\n        </code>\r\n    </pre>\r\n    </div>\r\n  </div>\r\n\r\n  <ReLink :links=\"links\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport Child from \"./Child\";\r\nconst childRef = ref();\r\nconst handleFn = () => {\r\n  alert(`子组件暴露的值-'childExpose'：${childRef.value.childExpose}`);\r\n  alert(`子组件未暴露的值-'childUnexpose'：${childRef.value.childUnexpose}`);\r\n  childRef.value.handleChildClick();\r\n};\r\n\r\nconst links = [\r\n  {\r\n    label: \"vue3 setup 模式中为什么不能直接通过ref调用组件的方法、值？\",\r\n    answer:\r\n      \"使用 <script setup> 的组件是默认关闭的，也即通过模板 ref 或者 $parent 链获取到的组件的公开实例，不会暴露任何在 <script setup> 中声明的绑定。为了在 <script setup> 组件中明确要暴露出去的属性，使用 defineExpose 编译器宏。\",\r\n  },\r\n  {\r\n    label: \"vue3 setup 模式中defineExpose是什么？\",\r\n    link: \"https://v3.cn.vuejs.org/api/sfc-script-setup.html#defineexpose\",\r\n  },\r\n  {\r\n    label: \"vue3 setup 模式中如何使用 ref 获取 dom？\",\r\n    link: \"https://v3.cn.vuejs.org/guide/composition-api-template-refs.html#模板引用\",\r\n  },\r\n];\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}