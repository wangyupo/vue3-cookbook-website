{"version":3,"sources":["webpack:///./src/views/package/2-store/index.vue","webpack:///./src/views/package/2-store/index.vue?2498"],"names":["store","useStore","userInfo","reactive","name","age","user","computed","state","app","handleSumit","commit","console","log","getters","onMounted","links","label","link","__exports__"],"mappings":"k3GAiIA,MAAMA,EAAQC,iBAERC,EAAWC,sBAAS,CACxBC,KAAM,MACNC,IAAK,OAGDC,EAAOC,sBAAS,IAAMP,EAAMQ,MAAMC,IAAIP,UAEtCQ,EAAc,KAClBV,EAAMW,OAAO,kBAAmBT,GAChCU,QAAQC,IAAIb,EAAMc,QAAQ,aAC1BF,QAAQC,IAAIb,EAAMc,QAAQ,aAG5BC,uBAAU,KACRL,MAGF,MAAMM,EAAQ,CACZ,CACEC,MAAO,aACPC,KAAM,8BAER,CACED,MAAO,4BACPC,KAAM,qDAER,CACED,MAAO,sBACPC,KAAM,mEAER,CACED,MAAO,yCACPC,KAAM,uE,8+CChKV,MAAMC,EAAc,EAEL","file":"js/chunk-2d224ee4.269cdedf.js","sourcesContent":["<template>\r\n  <div class=\"flex\">\r\n    <div>\r\n      <div class=\"flex items-center\">\r\n        姓名：\r\n        <el-input v-model=\"userInfo.name\" class=\"w-32\" maxlength=\"10\"></el-input>\r\n      </div>\r\n      <div class=\"flex items-center mt-4\">\r\n        年龄：\r\n        <el-input v-model=\"userInfo.age\" class=\"w-32\" maxlength=\"3\"></el-input>\r\n      </div>\r\n      <el-button type=\"primary\" class=\"mt-4\" @click=\"handleSumit\">提交</el-button>\r\n    </div>\r\n\r\n    <div class=\"ml-64\">\r\n      <p class=\"font-semibold\">store数据：</p>\r\n      <p class=\"mt-2\">{{ user }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex overflow-x-auto\">\r\n    <div v-highlight class=\"mt-8\">\r\n      <p class=\"font-bold\">组件代码：</p>\r\n      <pre>\r\n            <code>\r\n&lt;template&gt;\r\n  姓名：&lt;el-input v-model=\"userInfo.name\"&gt;&lt;/el-input&gt;\r\n  年龄：&lt;el-input v-model=\"userInfo.age\"&gt;&lt;/el-input&gt;\r\n  &lt;el-button type=\"primary\" @click=\"handleSumit\"&gt;提交&lt;/el-button&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\n  import { reactive, getCurrentInstance, computed, onMounted } from \"vue\";\r\n\r\n  // 方法一：使用 getCurrentInstance 实例中的 $store 也可以使用 vuex\r\n  // const { appContext } = getCurrentInstance();\r\n  // const { $store } = appContext.config.globalProperties;\r\n\r\n  // 方法二：使用 vuex 中的 store 实例\r\n  import { useStore } from \"vuex\";\r\n  const store = useStore();\r\n\r\n  const userInfo = reactive({\r\n    name: \"tom\",\r\n    age: \"20\",\r\n  });\r\n\r\n  const user = computed(() => store.state.app.userInfo);\r\n\r\n  const handleSumit = () => {\r\n    store.commit(\"app/setUserInfo\", userInfo);\r\n    console.log(store.getters[\"app/name\"]);\r\n    console.log(store.getters[\"app/age\"]);\r\n  };\r\n&lt;/script&gt;\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\">\r\n      <p class=\"font-bold\">store（app.js）代码：</p>\r\n      <pre>\r\n            <code class=\"js\">\r\n// 这里展示的是模块的 store，且开启了名命空间\r\nimport loadsh from \"lodash\";\r\n\r\nconst app = {\r\n  namespaced: true,\r\n  state: {\r\n    userInfo: {},\r\n  },\r\n  getters: {\r\n    name: (state) => state.userInfo.name,\r\n    age: (state) => state.userInfo.age,\r\n  },\r\n  mutations: {\r\n    setUserInfo(state, data) {\r\n      // reactive 响应式转换是“深度转换”——它会影响传递对象的所有嵌套 property。\r\n      state.userInfo = loadsh.cloneDeep(data);\r\n    },\r\n  },\r\n};\r\n\r\nexport default app;\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\">\r\n      <p class=\"font-bold\">store（index.js）代码：</p>\r\n      <pre>\r\n            <code class=\"js\">\r\nimport { createStore } from \"vuex\";\r\nimport app from \"./modules/app\";\r\n\r\nexport default createStore({\r\n  modules: {\r\n    app,\r\n  },\r\n});\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\">\r\n      <p class=\"font-bold\">store 目录结构：</p>\r\n      <pre>\r\n            <code class=\"js\">\r\n|-- store\r\n      |-- index.js\r\n      |-- modules\r\n            |-- app.js\r\n            </code>\r\n        </pre>\r\n    </div>\r\n  </div>\r\n\r\n  <ReLink class=\"mt-8\" :links=\"links\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, getCurrentInstance, computed, onMounted } from \"vue\";\r\n\r\n// 方法一：使用 getCurrentInstance 实例中的 $store 也可以使用 vuex\r\n// const { appContext } = getCurrentInstance();\r\n// const { $store } = appContext.config.globalProperties;\r\n\r\n// 方法二：使用 vuex 中的 store 实例\r\nimport { useStore } from \"vuex\";\r\nconst store = useStore();\r\n\r\nconst userInfo = reactive({\r\n  name: \"tom\",\r\n  age: \"20\",\r\n});\r\n\r\nconst user = computed(() => store.state.app.userInfo);\r\n\r\nconst handleSumit = () => {\r\n  store.commit(\"app/setUserInfo\", userInfo);\r\n  console.log(store.getters[\"app/name\"]);\r\n  console.log(store.getters[\"app/age\"]);\r\n};\r\n\r\nonMounted(() => {\r\n  handleSumit();\r\n});\r\n\r\nconst links = [\r\n  {\r\n    label: \"vuex 中文文档：\",\r\n    link: \"https://vuex.vuejs.org/zh/\",\r\n  },\r\n  {\r\n    label: \"vuex 如何访问有命名空间的 store 模块？\",\r\n    link: \"https://vuex.vuejs.org/zh/guide/modules.html#命名空间\",\r\n  },\r\n  {\r\n    label: \"如何在vue3中使用vuex 4.x？\",\r\n    link: \"https://blog.csdn.net/weixin_43564110/article/details/111566345\",\r\n  },\r\n  {\r\n    label: \"为什么 reactive 的数据会未经 commit 直接改变 state？\",\r\n    link: \"https://v3.cn.vuejs.org/guide/reactivity-fundamentals.html#声明响应式状态\",\r\n  },\r\n];\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}