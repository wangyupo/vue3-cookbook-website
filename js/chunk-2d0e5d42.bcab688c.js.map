{"version":3,"sources":["webpack:///./src/views/base/10-teleport/index.vue","webpack:///./src/views/base/10-teleport/index.vue?0689"],"names":["visibleFull","ref","visibleCurrent","links","label","link","__exports__"],"mappings":"o6GA0GA,MAAMA,EAAcC,kBAAI,GAClBC,EAAiBD,kBAAI,GAErBE,EAAQ,CACZ,CACEC,MAAO,wBACPC,KAAM,wDAER,CACED,MAAO,0BACPC,KAAM,iEAER,CACED,MAAO,6BACPC,KAAM,+C,g+CCrHV,MAAMC,EAAc,EAEL","file":"js/chunk-2d0e5d42.bcab688c.js","sourcesContent":["<template>\r\n  <!-- teleport 的功能是将模板HTML移动到DOM不同地方的方法\r\n  目标元素不能是teleport标签所在组件的父组件或子组件 -->\r\n  <div class=\"flex justify-between\">\r\n    <div>\r\n      <teleport to=\"#fullScreen\">\r\n        <div\r\n          class=\"absolute top-0 right-0 bottom-0 left-0 bg-green-100 flex items-center justify-center flex-col\"\r\n          v-if=\"visibleFull\"\r\n        >\r\n          <p>我通过 teleport 挂载到了 Vue app 之外的其他位置， 可打开 public 文件夹下的 index.html 查看以下元素：</p>\r\n          <p>&lt;div id=\"fullScreen\"&gt;&lt;/div&gt;</p>\r\n          <p class=\"italic font-semibold\">\r\n            * 我既剥离了 vue 顶层组件挂载的 DOM 的限制，而且还能使用 vue 组件内的状态。\r\n          </p>\r\n          <el-button class=\"mt-4\" type=\"primary\" @click=\"visibleFull = !visibleFull\">点我关闭</el-button>\r\n        </div>\r\n      </teleport>\r\n      <div\r\n        class=\"absolute top-0 right-0 bottom-0 left-0 bg-green-100 flex items-center justify-center flex-col\"\r\n        v-if=\"visibleCurrent\"\r\n      >\r\n        <p>我仅占据了内容区域</p>\r\n        <p>我的 dom 在 vue 单文件中</p>\r\n        <el-button class=\"mt-4\" type=\"primary\" @click=\"visibleCurrent = !visibleCurrent\">点我关闭</el-button>\r\n      </div>\r\n      <el-button type=\"primary\" @click=\"visibleFull = !visibleFull\">全屏弹窗</el-button>\r\n      <el-button type=\"primary\" @click=\"visibleCurrent = !visibleCurrent\">内容区弹窗</el-button>\r\n    </div>\r\n\r\n    <div class=\"w-3/5 italic text-sm font-semibold leading-6 mr-8\">\r\n      <p>\r\n        <span class=\"text-xl\">注：</span>\r\n        标准情况下，teleport 不能挂载在当前组件的父组件及子组件上，应该挂载到 DOM 中 Vue app 之外的其它位置，即在\r\n        index.html 中提供挂载区域。\r\n      </p>\r\n      <p>\r\n        * 如果你挂载到了父组件或子组件上，控制台将会报错 \"Failed to locate Teleport target with selector \"xxx\". Note the\r\n        target element must exist before the component is mounted\" ，解决方案见参考链接第三个（可以解决，但不推荐！）。\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"flex overflow-x-auto\">\r\n    <div v-highlight class=\"mt-8\" style=\"width: 800px\">\r\n      <p class=\"font-bold\">组件代码：</p>\r\n      <pre>\r\n            <code>\r\n&lt;template&gt;\r\n  &lt;teleport to=\"#fullScreen\"&gt;\r\n    &lt;div v-if=\"visibleFull\"&gt;\r\n      &lt;el-button @click=\"visibleFull = !visibleFull\"&gt;点我关闭&lt;/el-button&gt;\r\n    &lt;/div&gt;\r\n  &lt;/teleport&gt;\r\n\r\n  &lt;div v-if=\"visibleCurrent\"&gt;\r\n    &lt;el-button @click=\"visibleCurrent = !visibleCurrent\"&gt;点我关闭&lt;/el-button&gt;\r\n  &lt;/div&gt;\r\n  \r\n  &lt;el-button @click=\"visibleFull = !visibleFull\"&gt;全屏弹窗&lt;/el-button&gt;\r\n  &lt;el-button @click=\"visibleCurrent = !visibleCurrent\"&gt;内容区弹窗&lt;/el-button&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script setup&gt;\r\n  import { ref } from \"vue\";\r\n\r\n  const visibleFull = ref(false);\r\n  const visibleCurrent = ref(false);\r\n&lt;/script&gt;\r\n            </code>\r\n        </pre>\r\n    </div>\r\n\r\n    <div v-highlight class=\"mt-8 ml-4\" style=\"width: 800px\">\r\n      <p class=\"font-bold\">index.html代码：</p>\r\n      <pre>\r\n            <code>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"\"&gt;\r\n  &lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\"&gt;\r\n    &lt;link rel=\"icon\" href=\"&lt;%= BASE_URL %&gt;favicon.ico\"&gt;\r\n    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;noscript&gt;\r\n      &lt;strong&gt;浏览器不支持&lt;/strong&gt;\r\n    &lt;/noscript&gt;\r\n    &lt;div id=\"app\"&gt;&lt;/div&gt;\r\n    &lt;!-- 注意 id 为 fullScreen 的 div，teleport 的 to 属性指的就是这儿 --&gt;\r\n    &lt;div id=\"fullScreen\"&gt;&lt;/div&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;\r\n            </code>\r\n        </pre>\r\n    </div>\r\n  </div>\r\n\r\n  <ReLink :links=\"links\" />\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst visibleFull = ref(false);\r\nconst visibleCurrent = ref(false);\r\n\r\nconst links = [\r\n  {\r\n    label: \"vue3 中的 teleport 是什么？\",\r\n    link: \"https://v3.cn.vuejs.org/guide/teleport.html#teleport\",\r\n  },\r\n  {\r\n    label: \"vue3 中的 teleport 有哪些属性？\",\r\n    link: \"https://v3.cn.vuejs.org/api/built-in-components.html#teleport\",\r\n  },\r\n  {\r\n    label: \"teleport 的目标元素如何直接挂载在父组件上？\",\r\n    link: \"https://juejin.cn/post/6952697587132530702\",\r\n  },\r\n];\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}