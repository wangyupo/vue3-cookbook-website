(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e5d42"],{"95c3":function(e,t,l){"use strict";l.r(t);var c=l("7a23");const n={class:"flex justify-between"},r={key:0,class:"absolute top-0 right-0 bottom-0 left-0 bg-green-100 flex items-center justify-center flex-col"},o=Object(c["createElementVNode"])("p",null,"我通过 teleport 挂载到了 Vue app 之外的其他位置， 可打开 public 文件夹下的 index.html 查看以下元素：",-1),i=Object(c["createElementVNode"])("p",null,'<div id="fullScreen"></div>',-1),a=Object(c["createElementVNode"])("p",{class:"italic font-semibold"}," * 我既剥离了 vue 顶层组件挂载的 DOM 的限制，而且还能使用 vue 组件内的状态。 ",-1),b=Object(c["createTextVNode"])("点我关闭"),s={key:0,class:"absolute top-0 right-0 bottom-0 left-0 bg-green-100 flex items-center justify-center flex-col"},d=Object(c["createElementVNode"])("p",null,"我仅占据了内容区域",-1),u=Object(c["createElementVNode"])("p",null,"我的 dom 在 vue 单文件中",-1),p=Object(c["createTextVNode"])("点我关闭"),m=Object(c["createTextVNode"])("全屏弹窗"),v=Object(c["createTextVNode"])("内容区弹窗"),j=Object(c["createElementVNode"])("div",{class:"w-3/5 italic text-sm font-semibold leading-6 mr-8"},[Object(c["createElementVNode"])("p",null,[Object(c["createElementVNode"])("span",{class:"text-xl"},"注："),Object(c["createTextVNode"])(" 标准情况下，teleport 不能挂载在当前组件的父组件及子组件上，应该挂载到 DOM 中 Vue app 之外的其它位置，即在 index.html 中提供挂载区域。 ")]),Object(c["createElementVNode"])("p",null,' * 如果你挂载到了父组件或子组件上，控制台将会报错 "Failed to locate Teleport target with selector "xxx". Note the target element must exist before the component is mounted" ，解决方案见参考链接第三个（可以解决，但不推荐！）。 ')],-1),O={class:"flex overflow-x-auto"},f={class:"mt-8",style:{width:"800px"}},h=Object(c["createElementVNode"])("p",{class:"font-bold"},"组件代码：",-1),V=Object(c["createElementVNode"])("pre",null,[Object(c["createTextVNode"])("            "),Object(c["createElementVNode"])("code",null,'\r\n<template>\r\n  <teleport to="#fullScreen">\r\n    <div v-if="visibleFull">\r\n      <el-button @click="visibleFull = !visibleFull">点我关闭</el-button>\r\n    </div>\r\n  </teleport>\r\n\r\n  <div v-if="visibleCurrent">\r\n    <el-button @click="visibleCurrent = !visibleCurrent">点我关闭</el-button>\r\n  </div>\r\n  \r\n  <el-button @click="visibleFull = !visibleFull">全屏弹窗</el-button>\r\n  <el-button @click="visibleCurrent = !visibleCurrent">内容区弹窗</el-button>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref } from "vue";\r\n\r\n  const visibleFull = ref(false);\r\n  const visibleCurrent = ref(false);\r\n<\/script>\r\n            '),Object(c["createTextVNode"])("\r\n        ")],-1),x=[h,V],N={class:"mt-8 ml-4",style:{width:"800px"}},k=Object(c["createElementVNode"])("p",{class:"font-bold"},"index.html代码：",-1),E=Object(c["createElementVNode"])("pre",null,[Object(c["createTextVNode"])("            "),Object(c["createElementVNode"])("code",null,'\r\n<!DOCTYPE html>\r\n<html lang="">\r\n  <head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width,initial-scale=1.0">\r\n    <link rel="icon" href="<%= BASE_URL %>favicon.ico">\r\n    <title><%= htmlWebpackPlugin.options.title %></title>\r\n  </head>\r\n  <body>\r\n    <noscript>\r\n      <strong>浏览器不支持</strong>\r\n    </noscript>\r\n    <div id="app"></div>\r\n    \x3c!-- 注意 id 为 fullScreen 的 div，teleport 的 to 属性指的就是这儿 --\x3e\r\n    <div id="fullScreen"></div>\r\n  </body>\r\n</html>\r\n            '),Object(c["createTextVNode"])("\r\n        ")],-1),w=[k,E];var g={__name:"index",setup(e){const t=Object(c["ref"])(!1),l=Object(c["ref"])(!1),h=[{label:"vue3 中的 teleport 是什么？",link:"https://v3.cn.vuejs.org/guide/teleport.html#teleport"},{label:"vue3 中的 teleport 有哪些属性？",link:"https://v3.cn.vuejs.org/api/built-in-components.html#teleport"},{label:"teleport 的目标元素如何直接挂载在父组件上？",link:"https://juejin.cn/post/6952697587132530702"}];return(e,V)=>{const k=Object(c["resolveComponent"])("el-button"),E=Object(c["resolveComponent"])("ReLink"),g=Object(c["resolveDirective"])("highlight");return Object(c["openBlock"])(),Object(c["createElementBlock"])(c["Fragment"],null,[Object(c["createElementVNode"])("div",n,[Object(c["createElementVNode"])("div",null,[(Object(c["openBlock"])(),Object(c["createBlock"])(c["Teleport"],{to:"#fullScreen"},[t.value?(Object(c["openBlock"])(),Object(c["createElementBlock"])("div",r,[o,i,a,Object(c["createVNode"])(k,{class:"mt-4",type:"primary",onClick:V[0]||(V[0]=e=>t.value=!t.value)},{default:Object(c["withCtx"])(()=>[b]),_:1})])):Object(c["createCommentVNode"])("",!0)])),l.value?(Object(c["openBlock"])(),Object(c["createElementBlock"])("div",s,[d,u,Object(c["createVNode"])(k,{class:"mt-4",type:"primary",onClick:V[1]||(V[1]=e=>l.value=!l.value)},{default:Object(c["withCtx"])(()=>[p]),_:1})])):Object(c["createCommentVNode"])("",!0),Object(c["createVNode"])(k,{type:"primary",onClick:V[2]||(V[2]=e=>t.value=!t.value)},{default:Object(c["withCtx"])(()=>[m]),_:1}),Object(c["createVNode"])(k,{type:"primary",onClick:V[3]||(V[3]=e=>l.value=!l.value)},{default:Object(c["withCtx"])(()=>[v]),_:1})]),j]),Object(c["createElementVNode"])("div",O,[Object(c["withDirectives"])((Object(c["openBlock"])(),Object(c["createElementBlock"])("div",f,x)),[[g]]),Object(c["withDirectives"])((Object(c["openBlock"])(),Object(c["createElementBlock"])("div",N,w)),[[g]])]),Object(c["createVNode"])(E,{links:h})],64)}}};const C=g;t["default"]=C}}]);
//# sourceMappingURL=chunk-2d0e5d42.bcab688c.js.map